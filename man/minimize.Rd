% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/minimize.R
\name{minimize}
\alias{minimize}
\title{Find optimal two-stage design by constraint minimization}
\usage{
minimize(objective, subject_to, initial_design,
  lower_boundary_design = get_lower_boundary_design(initial_design),
  upper_boundary_design = get_upper_boundary_design(initial_design),
  opts = list(algorithm = "NLOPT_LN_COBYLA", xtol_rel = 1e-05, maxeval =
  10000), ...)
}
\arguments{
\item{objective}{objective function}

\item{subject_to}{constraint collection}

\item{initial_design}{initial guess (x0 for nloptr)}

\item{lower_boundary_design}{design specifying the lower boundary.}

\item{upper_boundary_design}{design specifying the upper boundary}

\item{opts}{options list passed to nloptr}

\item{...}{further optional arguments passed to \code{\link{nloptr}}}
}
\value{
\item{design}{ The resulting optimal design}
        \item{nloptr_return}{ Output of the corresponding nloptr call}
        \item{call_args}{ The arguments given to the optimization call}
}
\description{
\code{minimize} takes an unconditioonal score
and a constraint set (or single constraint) of conditional and/or unconditional
scores and solves the corresponding constraint minimization problem
using \code{nloptr} (using COBYLA by default).
An initial design has to be defined. It is also possible to defined
lower- and upper-boundary designs. If this is not done, these
are computed automatically.
}
