# Generated by roxygen2: do not edit by hand

S3method(print, TwoStageDesignSummary)
S3method(print, adoptrOptimizationResult)
export(AverageN2)
export(Binomial)
export(ConditionalPower)
export(ConditionalSampleSize)
export(ContinuousPrior)
export(ExpectedSampleSize)
export(GroupSequentialDesign)
export(MaximumSampleSize)
export(N1)
export(Normal)
export(OneStageDesign)
export(PointMassPrior)
export(Power)
export(Student)
export(TwoStageDesign)
export(bounds)
export(c2)
export(composite)
export(condition)
export(cumulative_distribution_function)
export(evaluate)
export(expectation)
export(expected)
export(get_initial_design)
export(get_lower_boundary_design)
export(get_upper_boundary_design)
export(make_fixed)
export(make_tunable)
export(minimize)
export(n)
export(n1)
export(n2)
export(posterior)
export(predictive_cdf)
export(predictive_pdf)
export(probability_density_function)
export(subject_to)
export(tunable_parameters)
exportClasses(AverageN2)
exportClasses(Binomial)
exportClasses(ConditionalPower)
exportClasses(ConditionalSampleSize)
exportClasses(ContinuousPrior)
exportClasses(DataDistribution)
exportClasses(GroupSequentialDesign)
exportClasses(MaximumSampleSize)
exportClasses(N1)
exportClasses(Normal)
exportClasses(OneStageDesign)
exportClasses(PointMassPrior)
exportClasses(Prior)
exportClasses(Student)
exportClasses(TwoStageDesign)
exportMethods("<=")
exportMethods(">=")
exportMethods(TwoStageDesign)
exportMethods(bounds)
exportMethods(c2)
exportMethods(condition)
exportMethods(cumulative_distribution_function)
exportMethods(evaluate)
exportMethods(expectation)
exportMethods(expected)
exportMethods(get_lower_boundary_design)
exportMethods(get_upper_boundary_design)
exportMethods(make_fixed)
exportMethods(make_tunable)
exportMethods(n)
exportMethods(n1)
exportMethods(n2)
exportMethods(plot)
exportMethods(posterior)
exportMethods(predictive_cdf)
exportMethods(predictive_pdf)
exportMethods(probability_density_function)
exportMethods(quantile)
exportMethods(simulate)
exportMethods(summary)
exportMethods(tunable_parameters)
exportMethods(update)
import(methods)
